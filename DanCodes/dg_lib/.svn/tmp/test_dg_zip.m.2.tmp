function test_dg_zip

%$Rev$
%$Date$
%$Author$

% col 1=L, 2=R, 3=pairs, 4=extraL, 5=extraR
inout = {
    % non-equal pairs
    1 2 [1 1] [] []
    2 [1; 3] [1 2] [] 1
    1 [2 3] [1 1] [] 2
    [1; 3] [2; 4] [1 1; 2 2] [] []
    [1; 3; 6; 7; 9] [2; 4; 5; 8; 10] ...
        [1 1; 2 2; 4 4; 5 5] [3] [3]
    [1 3 6 7 9] [2 4 5 8 10] ...
        [1 1; 2 2; 4 4; 5 5] [3] [3]
    [1; 3; 4; 7; 9] [2; 5; 6; 8] ...
        [1 1; 3 2; 4 4] [2 5] 3
    [1 5] [2 3 4 6] [1 1; 2 4] [] [2 3]
    [1 3 4 5] [2 6] [1 1; 4 2] [2 3] []
    1 [2 3 4] [1 1] [] [2 3]
    [1 3 4] 2 [1 1] [2 3] []
    [1 4] [2 3] [1 1] [2] [2]
    [1 3] 2 [1 1] 2 []
    [1 3] 4 [2 1] 1 []
    [1 3 5] 4 [2 1] [1 3] []
    [1 2 3 5 6] 4 [3 1] [1 2 4 5] []
    % equal pairs
    1:10 1:10 [(1:10)' (1:10)'] [] []
    1:10 2:10 [(2:10)' (1:9)'] 1 []
    2:10 1:10 [(1:9)' (2:10)'] [] 1
    1:9 1:10 [(1:9)' (1:9)'] [] 10
    1:10 1:9 [(1:9)' (1:9)'] 10 []
    1:2:10 1:10 [(1:5)' (1:2:10)'] [] [2:2:10]
    1:10 1:2:10 [(1:2:10)' (1:5)'] [2:2:10] []
    [1:5 7:10] [1:5 7:10] [(1:9)' (1:9)'] [] []
    [1:4 7:10] [1:5 7:10] [(1:8)' [1:4 6:9]'] [] [5]
    [1:5 7:10] [1:4 7:10] [[1:4 6:9]' (1:8)'] 5 []
    4:7 1:10 [(1:4)' (4:7)'] [] [1:3 8:10]
    1:10 4:7 [(4:7)' (1:4)'] [1:3 8:10] []
    1:256 1:256 [(1:256)' (1:256)'] [] []
};

for r = 1: size(inout,1)
    [a b c] = dg_zip(inout{r,1}, inout{r,2});
    if ~isequal(a, inout{r,3}) ...
            ||  ~isequal(b, inout{r,4}) ...
            ||  ~isequal(c, inout{r,5})
        disp(['Failed: ' mat2str(inout{r,1}) ', ' mat2str(inout{r,2})]);
        return
    end
end
disp('Test completed successfully');
